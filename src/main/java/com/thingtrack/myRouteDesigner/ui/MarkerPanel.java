package com.thingtrack.myRouteDesigner.ui;

import org.vaadin.vol.Vector;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class MarkerPanel extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout geoLocationLayout;
	@AutoGenerated
	private TextField latField;
	@AutoGenerated
	private Label lblLat;
	@AutoGenerated
	private TextField lonField;
	@AutoGenerated
	private Label lblLon;
	@AutoGenerated
	private VerticalLayout auxLayout;
	@AutoGenerated
	private HorizontalLayout addressLayout;
	@AutoGenerated
	private TextField addressField;
	@AutoGenerated
	private Embedded embedded;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	// default Thingtrack geoposition offices
	private static final double DEF_LON = -5.639457;
	private static final double DEF_LAT = 43.534674;
			
	private Vector vector;
	private Integer position;
	
	public MarkerPanel() {
		this(DEF_LON, DEF_LAT);
		
	}

	public MarkerPanel(Double lon, Double lat) {
		super();
		
		buildMainLayout();
		
		// top-level component properties
		setCompositionRoot(mainLayout);
		
		// TODO add user code here
		lonField.setNullRepresentation("");
		latField.setNullRepresentation("");
		
		lonField.setValue(lon);
		latField.setValue(lat);

	}
	
	public Integer getPosition() {
		return position;
		
	}

	public void setPosition(Integer position) {
		this.position = position;
		
	}

	public Vector getVector() {
		return vector;
		
	}

	public void setVector(Vector vector) {
		this.vector = vector;
		
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// addressLayout
		addressLayout = buildAddressLayout();
		mainLayout.addComponent(addressLayout);
		
		// geoLocationLayout
		geoLocationLayout = buildGeoLocationLayout();
		mainLayout.addComponent(geoLocationLayout);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildAddressLayout() {
		// common part: create layout
		addressLayout = new HorizontalLayout();
		addressLayout.setImmediate(false);
		addressLayout.setWidth("100.0%");
		addressLayout.setHeight("-1px");
		addressLayout.setMargin(false);
		
		// embedded
		embedded = new Embedded();
		embedded.setImmediate(false);
		embedded.setWidth("25px");
		embedded.setHeight("25px");
		embedded.setSource(new ThemeResource("img/component/embedded_icon.png"));
		embedded.setType(1);
		embedded.setMimeType("image/png");
		addressLayout.addComponent(embedded);
		
		// addressField
		addressField = new TextField();
		addressField.setImmediate(false);
		addressField.setWidth("100.0%");
		addressField.setHeight("-1px");
		addressLayout.addComponent(addressField);
		addressLayout.setExpandRatio(addressField, 1.0f);
		
		return addressLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildGeoLocationLayout() {
		// common part: create layout
		geoLocationLayout = new HorizontalLayout();
		geoLocationLayout.setImmediate(false);
		geoLocationLayout.setWidth("100.0%");
		geoLocationLayout.setHeight("24px");
		geoLocationLayout.setMargin(false);
		
		// auxLayout
		auxLayout = new VerticalLayout();
		auxLayout.setImmediate(false);
		auxLayout.setWidth("25px");
		auxLayout.setHeight("25px");
		auxLayout.setMargin(false);
		geoLocationLayout.addComponent(auxLayout);
		
		// lblLon
		lblLon = new Label();
		lblLon.setImmediate(false);
		lblLon.setWidth("-1px");
		lblLon.setHeight("-1px");
		lblLon.setValue("Longitude:");
		geoLocationLayout.addComponent(lblLon);
		
		// lonField
		lonField = new TextField();
		lonField.setImmediate(false);
		lonField.setWidth("60px");
		lonField.setHeight("-1px");
		geoLocationLayout.addComponent(lonField);
		
		// lblLat
		lblLat = new Label();
		lblLat.setImmediate(false);
		lblLat.setWidth("-1px");
		lblLat.setHeight("-1px");
		lblLat.setValue("Latitude:");
		geoLocationLayout.addComponent(lblLat);
		
		// latField
		latField = new TextField();
		latField.setImmediate(false);
		latField.setWidth("60px");
		latField.setHeight("-1px");
		geoLocationLayout.addComponent(latField);
		geoLocationLayout.setExpandRatio(latField, 1.0f);
		
		return geoLocationLayout;
	}

}
