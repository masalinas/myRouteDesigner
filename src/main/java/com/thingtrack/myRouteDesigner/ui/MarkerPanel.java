package com.thingtrack.myRouteDesigner.ui;

import java.io.Serializable;

import org.vaadin.addon.customfield.CustomField;
import org.vaadin.addons.locationtextfield.GeocodedLocation;
import org.vaadin.vol.PointVector;
import org.vaadin.vol.Vector;

import com.vaadin.data.Property;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.ThemeResource;
import com.vaadin.ui.Component;
import com.vaadin.ui.Embedded;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

@SuppressWarnings("serial")
public class MarkerPanel extends CustomField { 

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private HorizontalLayout addressStopLayout;
	@AutoGenerated
	private VerticalLayout aux5RightLayout;
	@AutoGenerated
	private LocalizationField addressField;
	@AutoGenerated
	private Embedded embedded;
	@AutoGenerated
	private HorizontalLayout dateStopLayout;
	@AutoGenerated
	private VerticalLayout aux3RightLayout;
	@AutoGenerated
	private PopupDateField departureDateField;
	@AutoGenerated
	private PopupDateField arrivalDateField;
	@AutoGenerated
	private VerticalLayout aux3LeftLayout;
	@AutoGenerated
	private HorizontalLayout nameStopLayout;
	@AutoGenerated
	private VerticalLayout aux4RightLayout;
	@AutoGenerated
	private TextField stopNameField;
	@AutoGenerated
	private VerticalLayout aux4LeftLayout;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */
	
	private Vector vector;
	private Integer position;
	private GeocodedLocation geocodedLocation;
	
	private MarkerPaintListener listenerMarkerPaint = null;
	
	public MarkerPanel(Double lon, Double lat) {
		super();
		
		buildMainLayout();
		
		// top-level component properties		
		setCompositionRoot(mainLayout);
		
		// TODO add user code here
		addressField.addListener(new ValueChangeListener() {			
			@Override
			public void valueChange(Property.ValueChangeEvent event) {
				geocodedLocation = (GeocodedLocation) addressField.getValue();
				
				vector = new PointVector(geocodedLocation.getLon(), geocodedLocation.getLat());
							
				if (listenerMarkerPaint != null)
					listenerMarkerPaint.markerPaint(new MarkerEvent(MarkerPanel.this, position, vector));
				
			}
		});
		
		if (lon != null && lat != null) {
			GeocodedLocation geocodedLocation = new GeocodedLocation();
			geocodedLocation.setLon(lon);
			geocodedLocation.setLat(lat);
			addressField.setValue(geocodedLocation);
		}
		
	}

	@Override
	public Class<?> getType() {
		return GeocodedLocation.class;
		
	}

	@Override
	public Object getValue() {
		return geocodedLocation;
		
	}
	
	@Override
	public void setValue(Object newValue) throws ReadOnlyException,ConversionException {		
		if(newValue != null && !(newValue instanceof GeocodedLocation))
			throw new ConversionException("There is an " + GeocodedLocation.class.getSimpleName()); 
		
		geocodedLocation = (GeocodedLocation) newValue;
		
		addressField.setValue(geocodedLocation);
	}

	public Vector getVector() {
		return vector;
		
	}
	
	public void setVector(Vector vector) {
		this.vector = vector;
		
	}
	
	public Integer getPosition() {
		return position;
		
	}

	public void setPosition(Integer position) {
		this.position = position;
		
	}
	
	public void addListenerMarkerPaint(MarkerPaintListener listener) {
		this.listenerMarkerPaint = listener;
		
	}
	
	public interface MarkerPaintListener extends Serializable {
        public void markerPaint(MarkerEvent event);

    }
	
	public class MarkerEvent extends Event {
		private int index;
		private Vector vector;

		public MarkerEvent(Component source, int index, Vector vector) {
			super(source);
			
			this.index = index;
			this.vector = vector;
		}

		/**
		 * @return the index
		 */
		public int getIndex() {
			return index;
		}

		/**
		 * @param index the index to set
		 */
		public void setIndex(int index) {
			this.index = index;
		}

		/**
		 * @return the vector
		 */
		public Vector getVector() {
			return vector;
		}

		/**
		 * @param vector the vector to set
		 */
		public void setVector(Vector vector) {
			this.vector = vector;
		}		
		
	}
	
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("-1px");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("-1px");
		
		// nameStopLayout
		nameStopLayout = buildNameStopLayout();
		mainLayout.addComponent(nameStopLayout);
		
		// dateStopLayout
		dateStopLayout = buildDateStopLayout();
		mainLayout.addComponent(dateStopLayout);
		
		// addressStopLayout
		addressStopLayout = buildAddressStopLayout();
		mainLayout.addComponent(addressStopLayout);
		
		return mainLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildNameStopLayout() {
		// common part: create layout
		nameStopLayout = new HorizontalLayout();
		nameStopLayout.setImmediate(false);
		nameStopLayout.setWidth("100.0%");
		nameStopLayout.setHeight("-1px");
		nameStopLayout.setMargin(false);
		nameStopLayout.setSpacing(true);
		
		// aux4LeftLayout
		aux4LeftLayout = new VerticalLayout();
		aux4LeftLayout.setImmediate(false);
		aux4LeftLayout.setWidth("25px");
		aux4LeftLayout.setHeight("-1px");
		aux4LeftLayout.setMargin(false);
		nameStopLayout.addComponent(aux4LeftLayout);
		
		// stopNameField
		stopNameField = new TextField();
		stopNameField.setCaption("Stop Name");
		stopNameField.setImmediate(false);
		stopNameField.setWidth("100.0%");
		stopNameField.setHeight("-1px");
		nameStopLayout.addComponent(stopNameField);
		nameStopLayout.setExpandRatio(stopNameField, 1.0f);
		
		// aux4RightLayout
		aux4RightLayout = new VerticalLayout();
		aux4RightLayout.setImmediate(false);
		aux4RightLayout.setWidth("12px");
		aux4RightLayout.setHeight("-1px");
		aux4RightLayout.setMargin(false);
		nameStopLayout.addComponent(aux4RightLayout);
		
		return nameStopLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildDateStopLayout() {
		// common part: create layout
		dateStopLayout = new HorizontalLayout();
		dateStopLayout.setImmediate(false);
		dateStopLayout.setWidth("-1px");
		dateStopLayout.setHeight("-1px");
		dateStopLayout.setMargin(false);
		dateStopLayout.setSpacing(true);
		
		// aux3LeftLayout
		aux3LeftLayout = new VerticalLayout();
		aux3LeftLayout.setImmediate(false);
		aux3LeftLayout.setWidth("25px");
		aux3LeftLayout.setHeight("-1px");
		aux3LeftLayout.setMargin(false);
		dateStopLayout.addComponent(aux3LeftLayout);
		
		// arrivalDateField
		arrivalDateField = new PopupDateField();
		arrivalDateField.setCaption("Arrival");
		arrivalDateField.setImmediate(false);
		arrivalDateField.setWidth("130px");
		arrivalDateField.setHeight("-1px");
		arrivalDateField.setResolution(2);
		dateStopLayout.addComponent(arrivalDateField);
		
		// departureDateField
		departureDateField = new PopupDateField();
		departureDateField.setCaption("Departure");
		departureDateField.setImmediate(false);
		departureDateField.setWidth("130px");
		departureDateField.setHeight("-1px");
		departureDateField.setResolution(2);
		dateStopLayout.addComponent(departureDateField);
		dateStopLayout.setExpandRatio(departureDateField, 1.0f);
		
		// aux3RightLayout
		aux3RightLayout = new VerticalLayout();
		aux3RightLayout.setImmediate(false);
		aux3RightLayout.setWidth("-1px");
		aux3RightLayout.setHeight("-1px");
		aux3RightLayout.setMargin(false);
		dateStopLayout.addComponent(aux3RightLayout);
		
		return dateStopLayout;
	}

	@AutoGenerated
	private HorizontalLayout buildAddressStopLayout() {
		// common part: create layout
		addressStopLayout = new HorizontalLayout();
		addressStopLayout.setImmediate(false);
		addressStopLayout.setWidth("100.0%");
		addressStopLayout.setHeight("-1px");
		addressStopLayout.setMargin(false);
		addressStopLayout.setSpacing(true);
		
		// embedded
		embedded = new Embedded();
		embedded.setImmediate(false);
		embedded.setWidth("25px");
		embedded.setHeight("25px");
		embedded.setSource(new ThemeResource("img/component/embedded_icon.png"));
		embedded.setType(1);
		embedded.setMimeType("image/png");
		addressStopLayout.addComponent(embedded);
		
		// addressField
		addressField = new LocalizationField();
		addressField.setCaption("Address");
		addressField.setImmediate(false);
		addressField.setWidth("100.0%");
		addressField.setHeight("-1px");
		addressStopLayout.addComponent(addressField);
		addressStopLayout.setExpandRatio(addressField, 1.0f);
		
		// aux5RightLayout
		aux5RightLayout = new VerticalLayout();
		aux5RightLayout.setImmediate(false);
		aux5RightLayout.setWidth("12px");
		aux5RightLayout.setHeight("-1px");
		aux5RightLayout.setMargin(false);
		addressStopLayout.addComponent(aux5RightLayout);
		
		return addressStopLayout;
	}
}
